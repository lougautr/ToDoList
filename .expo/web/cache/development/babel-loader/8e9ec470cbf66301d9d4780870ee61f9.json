{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons, FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport AdminScreen from \"../Screen/AdminScreen\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nvar Tab = createBottomTabNavigator();\nvar diffRoles = function diffRoles(token, username) {\n  if (username == \"admin\") {\n    return React.createElement(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: '#e91e63'\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"Admin\",\n      children: function children() {\n        return React.createElement(AdminScreen, {\n          token: token\n        });\n      },\n      options: {\n        tabBarLabel: 'Admin',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"account\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"SignOut\",\n      component: SignOutScreen,\n      options: {\n        tabBarLabel: 'SignOut',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(FontAwesome, {\n            name: \"sign-out\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }));\n  } else {\n    return React.createElement(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: '#e91e63'\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"TodoLists\",\n      children: function children() {\n        return React.createElement(TodoListsScreen, {\n          token: token,\n          username: username\n        });\n      },\n      options: {\n        tabBarLabel: 'TodoLists',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(FontAwesome, {\n            name: \"clipboard\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"SignOut\",\n      component: SignOutScreen,\n      options: {\n        tabBarLabel: 'SignOut',\n        tabBarIcon: function tabBarIcon() {\n          return React.createElement(FontAwesome, {\n            name: \"sign-out\",\n            color: \"#e91e63\",\n            size: \"20px\"\n          });\n        }\n      }\n    }));\n  }\n};\nexport default function Navigation() {\n  return React.createElement(TokenContext.Consumer, null, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      token = _ref2[0],\n      setToken = _ref2[1];\n    return React.createElement(UsernameContext.Consumer, null, function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        username = _ref4[0],\n        setUsername = _ref4[1];\n      return React.createElement(NavigationContainer, null, token == null ? React.createElement(Tab.Navigator, {\n        screenOptions: {\n          tabBarActiveTintColor: '#e91e63'\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"SignIn\",\n        component: SignInScreen,\n        options: {\n          tabBarLabel: 'SignIn',\n          tabBarIcon: function tabBarIcon() {\n            return React.createElement(FontAwesome, {\n              name: \"sign-in\",\n              color: \"#e91e63\",\n              size: \"20px\"\n            });\n          }\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"SignUp\",\n        component: SignUpScreen,\n        options: {\n          tabBarLabel: 'SignOut',\n          tabBarIcon: function tabBarIcon() {\n            return React.createElement(FontAwesome, {\n              name: \"sign-in\",\n              color: \"#e91e63\",\n              size: \"20px\"\n            });\n          }\n        }\n      })) : diffRoles(token, username));\n    });\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","FontAwesome","FontAwesome5","TodoListsScreen","HomeScreen","SignInScreen","SignUpScreen","SignOutScreen","AdminScreen","TokenContext","UsernameContext","Tab","diffRoles","token","username","tabBarActiveTintColor","tabBarLabel","tabBarIcon","Navigation","setToken","setUsername"],"sources":["/Users/antoninmontagne/Desktop/Info/L3/S5/AppClient/tp1/Navigation/Navigation.js"],"sourcesContent":["// npm i --save @react-navigation/bottom-tabs @react-navigation/native\n\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons, FontAwesome, FontAwesome5 } from '@expo/vector-icons';\n\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport AdminScreen from \"../Screen/AdminScreen\";\n\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\n\nconst Tab = createBottomTabNavigator();\n\nconst diffRoles = (token, username) => {\n  if (username == \"admin\") {\n    return (\n      <Tab.Navigator screenOptions={{\n        tabBarActiveTintColor: '#e91e63',\n      }}>\n        <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n          tabBarLabel: 'Home',\n          tabBarIcon: () => (\n            <MaterialCommunityIcons name=\"home\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }}/> \n        <Tab.Screen name=\"Admin\" children={() => { return <AdminScreen token={token}/>; }}\n        options={{\n          tabBarLabel: 'Admin',\n          tabBarIcon: () => (\n            <MaterialCommunityIcons name=\"account\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }} />\n        <Tab.Screen name=\"SignOut\" component={SignOutScreen} options={{\n          tabBarLabel: 'SignOut',\n          tabBarIcon: () => (\n            <FontAwesome name=\"sign-out\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }} />\n      </Tab.Navigator>\n    );\n  } else {\n    return (\n      <Tab.Navigator screenOptions={{\n        tabBarActiveTintColor: '#e91e63',\n      }}>\n        <Tab.Screen name=\"Home\" component={HomeScreen}  options={{\n          tabBarLabel: 'Home',\n          tabBarIcon: () => (\n            <MaterialCommunityIcons name=\"home\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }}/>\n        <Tab.Screen\n          name=\"TodoLists\"\n          children={() => {\n            return <TodoListsScreen token={token} username={username}\n            />;\n          }}\n          options={{\n            tabBarLabel: 'TodoLists',\n            tabBarIcon: () => (\n              <FontAwesome name=\"clipboard\" color={\"#e91e63\"} size={\"20px\"}/>\n            ),\n          }}\n        />\n        <Tab.Screen name=\"SignOut\" component={SignOutScreen} options={{\n          tabBarLabel: 'SignOut',\n          tabBarIcon: () => (\n            <FontAwesome name=\"sign-out\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }}/>\n      </Tab.Navigator>\n    );\n  }\n};\n\nexport default function Navigation() {\n  return (\n    <TokenContext.Consumer>\n      {([token, setToken]) => (\n        <UsernameContext.Consumer>\n          {([username, setUsername]) => {\n            return(\n            <NavigationContainer>\n              {token == null ? (\n                <Tab.Navigator screenOptions={{\n                  tabBarActiveTintColor: '#e91e63',\n                }}>\n                  <Tab.Screen name=\"SignIn\" component={SignInScreen} options={{\n          tabBarLabel: 'SignIn',\n          tabBarIcon: () => (\n            <FontAwesome name=\"sign-in\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }} />\n                  <Tab.Screen name=\"SignUp\" component={SignUpScreen} options={{\n          tabBarLabel: 'SignOut',\n          tabBarIcon: () => (\n            <FontAwesome name=\"sign-in\" color={\"#e91e63\"} size={\"20px\"}/>\n          ),\n        }}/>\n                </Tab.Navigator>\n              ) : (\n                  diffRoles(token, username)\n                )}\n            </NavigationContainer>\n          )}}\n        </UsernameContext.Consumer>\n      )}\n    </TokenContext.Consumer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}