{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TokenContext, UsernameContext } from \"./Context/Context\";\nimport TodoList from \"./components/TodoList\";\nimport Navigation from \"./navigation/Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  console.log(token, username);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TodoList, {})\n  })\n  ;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","TokenContext","UsernameContext","TodoList","Navigation","App","token","setToken","username","setUsername","console","log","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/antoninmontagne/Desktop/Info/L3/S5/AppClient/tp1/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TokenContext, UsernameContext } from './Context/Context';\n\nimport TodoList from './components/TodoList';\nimport Navigation from './navigation/Navigation';\n\nexport default function App() {\n  const [token, setToken] = useState(null)\n  const [username, setUsername] = useState(null)\n\n  console.log(token, username)\n  return (\n    <View style={styles.container}>\n      <TodoList/>\n    </View>\n    /*<UsernameContext.Provider value={[username, setUsername]}>\n      <TokenContext.Provider value={[token, setToken]}>\n        <Navigation/>\n      </TokenContext.Provider>\n    </UsernameContext.Provider>*/\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAEtC,SAASC,YAAY,EAAEC,eAAe;AAEtC,OAAOC,QAAQ;AACf,OAAOC,UAAU;AAAgC;AAEjD,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAA0BL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCM,KAAK;IAAEC,QAAQ;EACtB,iBAAgCP,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCQ,QAAQ;IAAEC,WAAW;EAE5BC,OAAO,CAACC,GAAG,CAACL,KAAK,EAAEE,QAAQ,CAAC;EAC5B,OACE,KAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,QAAQ;EAAE;EACN;AAOX;;AAEA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}