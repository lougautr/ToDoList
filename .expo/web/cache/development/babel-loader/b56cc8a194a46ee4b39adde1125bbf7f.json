{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport Constants from 'expo-constants';\nexport default function App() {\n  var counter = useRef(new Animated.Value(0)).current;\n  var countInterval = useRef(null);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  useEffect(function () {\n    countInterval.current = setInterval(function () {\n      return setCount(function (prev) {\n        return prev + 10;\n      });\n    }, 1000);\n    return function () {\n      clearInterval(countInterval);\n    };\n  }, []);\n  useEffect(function () {\n    load(count);\n    if (count >= 100) {\n      setCount(100);\n      clearInterval(countInterval);\n    }\n  }, [count]);\n  var load = function load(value) {\n    Animated.timing(counter, {\n      toValue: value,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n  var width = counter.interpolate({\n    inputRange: [0, 100],\n    outputRange: [\"0%\", \"100%\"],\n    extrapolate: \"clamp\"\n  });\n  return React.createElement(View, {\n    style: styles.progressBar\n  }, React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n      backgroundColor: \"#46FF33\",\n      width: width\n    })\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 8\n  },\n  text1: {\n    fontSize: 34\n  },\n  text2: {\n    fontSize: 22,\n    margin: 5\n  },\n  text3: {\n    fontSize: 18\n  },\n  progressBar: {\n    width: '80%',\n    height: 40,\n    backgroundColor: '#fff',\n    borderWidth: 3,\n    borderRadius: 8,\n    borderColor: '#555',\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useRef","Constants","App","counter","Animated","Value","current","countInterval","count","setCount","setInterval","prev","clearInterval","load","value","timing","toValue","duration","useNativeDriver","start","width","interpolate","inputRange","outputRange","extrapolate","styles","progressBar","StyleSheet","absoluteFill","backgroundColor","create","container","flex","alignItems","justifyContent","paddingTop","statusBarHeight","padding","text1","fontSize","text2","margin","text3","height","borderWidth","borderRadius","borderColor","flexDirection"],"sources":["/Users/antoninmontagne/Desktop/Info/L3/S5/AppClient/tp1/components/ProgressBar.js"],"sourcesContent":["import { Animated, StyleSheet, Text, View } from 'react-native';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Constants from 'expo-constants';\nexport default function App() {\n  const counter = useRef(new Animated.Value(0)).current;\n  const countInterval = useRef(null);\n  const [count, setCount] = useState(0);\n  // EFFECT HOOK TO SETUP AND CLEAN INTERvAL COUNTER\n  useEffect(() => {\n    // SETUP INTERVAL COUNTER TO REFERENCED HOOK\n    countInterval.current = setInterval(() => setCount((prev) => prev + 10), 1000);\n    return () => {\n      // CLEAR ON EXIT\n      clearInterval(countInterval);\n    };\n  }, []);\n  // EFFECT HOOK TO TRACK CHANGES IN PROGRESS\n  useEffect(() => {\n    // TRIGGER VIEW UPDATE\n    load(count)\n    if (count >= 100) {\n      setCount(100);\n      // CLEAR\n      clearInterval(countInterval);\n    }\n  }, [count]);\n  // FUNCTION TO ANIMATE VIEW\n  const load = (value) => {\n    // UPDATE ANIMATABLE VIEW\n    Animated.timing(counter, {\n      toValue: value,\n      duration: 1000,\n      useNativeDriver: false,\n    }).start();\n  };\n  const width = counter.interpolate({\n    inputRange: [0, 100],\n    outputRange: [\"0%\", \"100%\"],\n    extrapolate: \"clamp\"\n  })\n  return (\n      <View style={styles.progressBar}>\n        <Animated.View style={{ ...StyleSheet.absoluteFill, backgroundColor: \"#46FF33\", width: width }}/>\n      </View>\n    \n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n  },\n  text1: {\n    fontSize: 34\n  },\n  text2: {\n    fontSize: 22,\n    margin: 5\n  },\n  text3: {\n    fontSize: 18\n  },\n  progressBar: {\n   width: '80%',\n   height: 40,\n   backgroundColor: '#fff',\n   borderWidth: 3,\n   borderRadius: 8,\n   borderColor: '#555',\n   flexDirection:\"row\"\n }\n});\n"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,gBAAgB;AACtC,eAAe,SAASC,GAAG,GAAG;EAC5B,IAAMC,OAAO,GAAGH,MAAM,CAAC,IAAII,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACrD,IAAMC,aAAa,GAAGP,MAAM,CAAC,IAAI,CAAC;EAClC,gBAA0BD,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9BS,KAAK;IAAEC,QAAQ;EAEtBX,SAAS,CAAC,YAAM;IAEdS,aAAa,CAACD,OAAO,GAAGI,WAAW,CAAC;MAAA,OAAMD,QAAQ,CAAC,UAACE,IAAI;QAAA,OAAKA,IAAI,GAAG,EAAE;MAAA,EAAC;IAAA,GAAE,IAAI,CAAC;IAC9E,OAAO,YAAM;MAEXC,aAAa,CAACL,aAAa,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,YAAM;IAEde,IAAI,CAACL,KAAK,CAAC;IACX,IAAIA,KAAK,IAAI,GAAG,EAAE;MAChBC,QAAQ,CAAC,GAAG,CAAC;MAEbG,aAAa,CAACL,aAAa,CAAC;IAC9B;EACF,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEX,IAAMK,IAAI,GAAG,SAAPA,IAAI,CAAIC,KAAK,EAAK;IAEtBV,QAAQ,CAACW,MAAM,CAACZ,OAAO,EAAE;MACvBa,OAAO,EAAEF,KAAK;MACdG,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,EAAE;EACZ,CAAC;EACD,IAAMC,KAAK,GAAGjB,OAAO,CAACkB,WAAW,CAAC;IAChCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;IAC3BC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,OACI,oBAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC;EAAY,GAC9B,oBAAC,QAAQ,CAAC,IAAI;IAAC,KAAK,kCAAOC,UAAU,CAACC,YAAY;MAAEC,eAAe,EAAE,SAAS;MAAET,KAAK,EAAEA;IAAK;EAAG,EAAE,CAC5F;AAGb;AACA,IAAMK,MAAM,GAAGE,UAAU,CAACG,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPH,eAAe,EAAE,MAAM;IACvBI,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAElC,SAAS,CAACmC,eAAe;IACrCC,OAAO,EAAE;EACX,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLD,QAAQ,EAAE,EAAE;IACZE,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACLH,QAAQ,EAAE;EACZ,CAAC;EACDb,WAAW,EAAE;IACZN,KAAK,EAAE,KAAK;IACZuB,MAAM,EAAE,EAAE;IACVd,eAAe,EAAE,MAAM;IACvBe,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,MAAM;IACnBC,aAAa,EAAC;EAChB;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"module"}