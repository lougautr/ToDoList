{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\", \"sceneContainerStyle\"],\n  _excluded2 = [\"lazy\", \"tabBarOptions\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\nimport BottomTabView from \"../views/BottomTabView\";\nfunction BottomTabNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    sceneContainerStyle = _ref.sceneContainerStyle,\n    restWithDeprecated = _objectWithoutProperties(_ref, _excluded);\n  var lazy = restWithDeprecated.lazy,\n    tabBarOptions = restWithDeprecated.tabBarOptions,\n    rest = _objectWithoutProperties(restWithDeprecated, _excluded2);\n  var defaultScreenOptions = {};\n  if (tabBarOptions) {\n    var _tabBarOptions$labelP;\n    _extends2(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: (_tabBarOptions$labelP = tabBarOptions.labelPosition) != null ? _tabBarOptions$labelP : tabBarOptions.adaptive === false ? 'below-icon' : undefined,\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n    Object.keys(defaultScreenOptions).forEach(function (key) {\n      if (defaultScreenOptions[key] === undefined) {\n        delete defaultScreenOptions[key];\n      }\n    });\n    warnOnce(tabBarOptions, \"Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\" + JSON.stringify(defaultScreenOptions, null, 2) + \"\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.\");\n  }\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    warnOnce(true, \"Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.\");\n  }\n  var _useNavigationBuilder = useNavigationBuilder(TabRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      backBehavior: backBehavior,\n      children: children,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      defaultScreenOptions: defaultScreenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return React.createElement(NavigationContent, null, React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\nexport default createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"mappings":"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","names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","warnOnce","BottomTabView","BottomTabNavigator","id","_ref","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","restWithDeprecated","lazy","tabBarOptions","rest","defaultScreenOptions","Object","tabBarHideOnKeyboard","keyboardHidesTabBar","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarActiveBackgroundColor","activeBackgroundColor","tabBarInactiveBackgroundColor","inactiveBackgroundColor","tabBarAllowFontScaling","allowFontScaling","tabBarShowLabel","showLabel","tabBarLabelStyle","labelStyle","tabBarIconStyle","iconStyle","tabBarItemStyle","tabStyle","tabBarLabelPosition","labelPosition","adaptive","undefined","tabBarStyle","display","tabBarVisible","keys","forEach","key","JSON","stringify","state","descriptors","navigation","NavigationContent"],"sourceRoot":"../../src","sources":["createBottomTabNavigator.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}