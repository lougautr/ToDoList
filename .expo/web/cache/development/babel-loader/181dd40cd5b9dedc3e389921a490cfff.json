{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport AdminScreen from \"../Screen/AdminScreen\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nvar Tab = createBottomTabNavigator();\nvar diffRoles = function diffRoles(token, username) {\n  if (username == \"admin\") {\n    return React.createElement(Tab.Navigator, null, React.createElement(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home\",\n            color: \"#B23B33\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"Admin\",\n      children: function children() {\n        return React.createElement(AdminScreen, {\n          token: token\n        });\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen\n    }));\n  } else {\n    return React.createElement(Tab.Navigator, null, React.createElement(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), React.createElement(Tab.Screen, {\n      name: \"TodoLists\",\n      children: function children() {\n        return React.createElement(TodoListsScreen, {\n          token: token,\n          username: username\n        });\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"SignOut\",\n      component: SignOutScreen\n    }));\n  }\n};\nexport default function Navigation() {\n  return React.createElement(TokenContext.Consumer, null, function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      token = _ref3[0],\n      setToken = _ref3[1];\n    return React.createElement(UsernameContext.Consumer, null, function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n        username = _ref5[0],\n        setUsername = _ref5[1];\n      return React.createElement(NavigationContainer, null, token == null ? React.createElement(Tab.Navigator, null, React.createElement(Tab.Screen, {\n        name: \"SignIn\",\n        component: SignInScreen\n      }), React.createElement(Tab.Screen, {\n        name: \"SignUp\",\n        component: SignUpScreen\n      })) : diffRoles(token, username));\n    });\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","TodoListsScreen","HomeScreen","SignInScreen","SignUpScreen","SignOutScreen","AdminScreen","TokenContext","UsernameContext","Tab","diffRoles","token","username","tabBarLabel","tabBarIcon","color","size","Navigation","setToken","setUsername"],"sources":["/Users/antoninmontagne/Desktop/Info/L3/S5/AppClient/tp1/Navigation/Navigation.js"],"sourcesContent":["// npm i --save @react-navigation/bottom-tabs @react-navigation/native\n\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport AdminScreen from \"../Screen/AdminScreen\";\n\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\n\nconst Tab = createBottomTabNavigator();\n\nconst diffRoles = (token, username) => {\n  if (username == \"admin\") {\n    return (\n      <Tab.Navigator>\n        <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n          tabBarLabel: 'Home',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={\"#B23B33\"}/>\n          ),\n        }}/> \n        <Tab.Screen name=\"Admin\" children={() => { return <AdminScreen token={token}/>; }} />\n        <Tab.Screen name=\"SignUp\" component={SignUpScreen} />\n      </Tab.Navigator>\n    );\n  } else {\n    return (\n      <Tab.Navigator>\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen\n          name=\"TodoLists\"\n          children={() => {\n            return <TodoListsScreen token={token} username={username} />;\n          }}\n        />\n        <Tab.Screen name=\"SignOut\" component={SignOutScreen} />\n      </Tab.Navigator>\n    );\n  }\n};\n\nexport default function Navigation() {\n  return (\n    <TokenContext.Consumer>\n      {([token, setToken]) => (\n        <UsernameContext.Consumer>\n          {([username, setUsername]) => {\n            return(\n            <NavigationContainer>\n              {token == null ? (\n                <Tab.Navigator>\n                  <Tab.Screen name=\"SignIn\" component={SignInScreen} />\n                  <Tab.Screen name=\"SignUp\" component={SignUpScreen} />\n                </Tab.Navigator>\n              ) : (\n                  diffRoles(token, username)\n                )}\n            </NavigationContainer>\n          )}}\n        </UsernameContext.Consumer>\n      )}\n    </TokenContext.Consumer>\n  );\n}\n"],"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,sBAAsB,QAAQ,oBAAoB;AAE3D,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AACpB,OAAOC,WAAW;AAElB,SAASC,YAAY,EAAEC,eAAe;AAEtC,IAAMC,GAAG,GAAGV,wBAAwB,EAAE;AAEtC,IAAMW,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAEC,QAAQ,EAAK;EACrC,IAAIA,QAAQ,IAAI,OAAO,EAAE;IACvB,OACE,oBAAC,GAAG,CAAC,SAAS,QACZ,oBAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEV,UAAW;MAAC,OAAO,EAAE;QACtDW,WAAW,EAAE,MAAM;QACnBC,UAAU,EAAE;UAAA,IAAGC,KAAK,QAALA,KAAK;YAAEC,IAAI,QAAJA,IAAI;UAAA,OACxB,oBAAC,sBAAsB;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAE;UAAU,EAAE;QAAA;MAE3D;IAAE,EAAE,EACJ,oBAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAC,QAAQ,EAAE,oBAAM;QAAE,OAAO,oBAAC,WAAW;UAAC,KAAK,EAAEL;QAAM,EAAE;MAAE;IAAE,EAAG,EACrF,oBAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEP;IAAa,EAAG,CACvC;EAEpB,CAAC,MAAM;IACL,OACE,oBAAC,GAAG,CAAC,SAAS,QACZ,oBAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEF;IAAW,EAAG,EACjD,oBAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,WAAW;MAChB,QAAQ,EAAE,oBAAM;QACd,OAAO,oBAAC,eAAe;UAAC,KAAK,EAAES,KAAM;UAAC,QAAQ,EAAEC;QAAS,EAAG;MAC9D;IAAE,EACF,EACF,oBAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEP;IAAc,EAAG,CACzC;EAEpB;AACF,CAAC;AAED,eAAe,SAASY,UAAU,GAAG;EACnC,OACE,oBAAC,YAAY,CAAC,QAAQ,QACnB;IAAA;MAAEN,KAAK;MAAEO,QAAQ;IAAA,OAChB,oBAAC,eAAe,CAAC,QAAQ,QACtB,iBAA6B;MAAA;QAA3BN,QAAQ;QAAEO,WAAW;MACtB,OACA,oBAAC,mBAAmB,QACjBR,KAAK,IAAI,IAAI,GACZ,oBAAC,GAAG,CAAC,SAAS,QACZ,oBAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAER;MAAa,EAAG,EACrD,oBAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAEC;MAAa,EAAG,CACvC,GAEdM,SAAS,CAACC,KAAK,EAAEC,QAAQ,CAC1B,CACiB;IACvB,CAAC,CACuB;EAAA,CAC5B,CACqB;AAE5B"},"metadata":{},"sourceType":"module"}