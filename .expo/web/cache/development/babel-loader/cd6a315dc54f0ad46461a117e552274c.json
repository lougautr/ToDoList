{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { signUp } from \"../API/todoAPI\";\nimport { TokenContext } from \"../Context/Context\";\nimport { UsernameContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    login = _useState2[0],\n    setLogin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    copyPassword = _useState6[0],\n    setCopyPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    visible = _useState10[0],\n    setVisible = _useState10[1];\n  var getSignedUp = function getSignedUp(setToken, setUsername) {\n    setError('');\n    if (login == '' || password == '' || copyPassword == '') return;\n    if (password != copyPassword) {\n      setError(\"Passwords don't match\");\n      return;\n    }\n    setVisible(false);\n    signUp(login, password).then(function (token) {\n      setUsername(login);\n      setToken(token);\n      console.log('token', token);\n    }).catch(function (err) {\n      setError(err.message);\n    });\n    setVisible(true);\n  };\n  return _jsx(TokenContext.Consumer, {\n    children: function children(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        token = _ref2[0],\n        setToken = _ref2[1];\n      return _jsx(UsernameContext.Consumer, {\n        children: function children(_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n            username = _ref4[0],\n            setUsername = _ref4[1];\n          return _jsx(View, {\n            children: visible ? _jsxs(_Fragment, {\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Login\"\n                }), _jsx(TextInput, {\n                  style: styles.text_input,\n                  onChangeText: setLogin,\n                  onSubmitEditing: function onSubmitEditing() {\n                    return getSignedUp(setToken, setUsername);\n                  },\n                  value: login\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Password\"\n                }), _jsx(TextInput, {\n                  style: styles.text_input,\n                  onChangeText: setPassword,\n                  secureTextEntry: true,\n                  onSubmitEditing: function onSubmitEditing() {\n                    return getSignedUp(setToken, setUsername);\n                  },\n                  value: password\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Password Again\"\n                }), _jsx(TextInput, {\n                  style: styles.text_input,\n                  onChangeText: setCopyPassword,\n                  secureTextEntry: true,\n                  onSubmitEditing: function onSubmitEditing() {\n                    return getSignedUp(setToken, setUsername);\n                  },\n                  value: copyPassword\n                })]\n              }), _jsx(Button, {\n                onPress: function onPress() {\n                  return getSignedUp(setToken, setUsername);\n                },\n                title: \"Sign Up\"\n              }), error ? _jsx(Text, {\n                style: styles.text_error,\n                children: error\n              }) : []]\n            }) : _jsx(ActivityIndicator, {})\n          });\n        }\n      });\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  label: {\n    width: 70\n  },\n  text_error: {\n    color: 'red'\n  },\n  text_input: {\n    backgroundColor: 'white',\n    margin: 5\n  }\n});","map":{"version":3,"names":["React","useState","signUp","TokenContext","UsernameContext","SignUp","login","setLogin","password","setPassword","copyPassword","setCopyPassword","error","setError","visible","setVisible","getSignedUp","setToken","setUsername","then","token","console","log","catch","err","message","username","flexDirection","styles","label","text_input","text_error","StyleSheet","create","width","color","backgroundColor","margin"],"sources":["/Users/antoninmontagne/Desktop/Info/L3/S5/AppClient/tp1/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Text,\n  TextInput,\n  Button,\n  View,\n  StyleSheet,\n  ActivityIndicator\n} from 'react-native'\n\nimport { signUp } from '../API/todoAPI'\n\nimport { TokenContext } from '../Context/Context'\nimport { UsernameContext } from '../Context/Context'\n\nexport default function SignUp () {\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n  const [copyPassword, setCopyPassword] = useState('')\n  const [error, setError] = useState('')\n  const [visible, setVisible] = useState(true)\n\n  const getSignedUp = (setToken, setUsername) => {\n    setError('')\n    if (login == '' || password == '' || copyPassword == '') return\n    if (password != copyPassword){\n        setError(\"Passwords don't match\")\n        return\n    } \n    setVisible(false)\n    signUp(login, password)\n      .then(token => {\n        setUsername(login)\n        setToken(token)\n        console.log('token', token)\n      })\n      .catch(err => {\n        setError(err.message)\n      })\n    setVisible(true)\n  }\n\n  return (\n    <TokenContext.Consumer>\n      {([token, setToken]) => (\n        <UsernameContext.Consumer>\n          {([username, setUsername]) => {\n            return (\n              <View>\n                {visible ? (\n                  <>\n                    <View style={{ flexDirection: 'row' }}>\n                      <Text style={styles.label}>Login</Text>\n                      <TextInput\n                        style={styles.text_input}\n                        onChangeText={setLogin}\n                        onSubmitEditing={() =>\n                          getSignedUp(setToken, setUsername)\n                        }\n                        value={login}\n                      />\n                    </View>\n                    <View style={{ flexDirection: 'row' }}>\n                      <Text style={styles.label}>Password</Text>\n                      <TextInput\n                        style={styles.text_input}\n                        onChangeText={setPassword}\n                        secureTextEntry={true}\n                        onSubmitEditing={() =>\n                          getSignedUp(setToken, setUsername)\n                        }\n                        value={password}\n                      />\n                    </View>\n                    <View style={{ flexDirection: 'row' }}>\n                      <Text style={styles.label}>Password Again</Text>\n                      <TextInput\n                        style={styles.text_input}\n                        onChangeText={setCopyPassword}\n                        secureTextEntry={true}\n                        onSubmitEditing={() =>\n                          getSignedUp(setToken, setUsername)\n                        }\n                        value={copyPassword}\n                      />\n                    </View>\n                    <Button\n                      onPress={() => getSignedUp(setToken, setUsername)}\n                      title='Sign Up'\n                    />\n                    {error ? (\n                      <Text style={styles.text_error}>{error}</Text>\n                    ) : (\n                      []\n                    )}\n                  </>\n                ) : (\n                  <ActivityIndicator />\n                )}\n              </View>\n            )\n          }}\n        </UsernameContext.Consumer>\n      )}\n    </TokenContext.Consumer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    width: 70\n  },\n  text_error: {\n    color: 'red'\n  },\n  text_input: {\n    //borderWidth: 1,\n    backgroundColor: 'white',\n    margin: 5\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}