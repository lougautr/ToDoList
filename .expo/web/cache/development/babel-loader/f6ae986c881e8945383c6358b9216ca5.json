{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"underlineStyle\", \"activeUnderlineColor\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"lineHeight\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./Adornment/enums\";\nimport TextInputAdornment from \"./Adornment/TextInputAdornment\";\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { ADORNMENT_SIZE, LABEL_PADDING_TOP_DENSE, LABEL_WIGGLE_X_OFFSET, MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_Y_OFFSET, MIN_DENSE_HEIGHT, MIN_DENSE_HEIGHT_WL } from \"./constants\";\nimport { adjustPaddingFlat, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding, calculateInputHeight, calculateLabelTopPosition, calculatePadding, getConstants, getFlatInputColors, interpolatePlaceholder } from \"./helpers\";\nimport InputLabel from \"./Label/InputLabel\";\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    selectionColor = _ref.selectionColor,\n    underlineColor = _ref.underlineColor,\n    underlineStyle = _ref.underlineStyle,\n    activeUnderlineColor = _ref.activeUnderlineColor,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(NativeTextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-flat' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isAndroid = Platform.OS === 'android';\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = getConstants(isV3),\n    LABEL_PADDING_TOP = _getConstants.LABEL_PADDING_TOP,\n    FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT;\n  var _ref3 = StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref3.fontSize,\n    lineHeight = _ref3.lineHeight,\n    fontWeight = _ref3.fontWeight,\n    height = _ref3.height,\n    paddingHorizontal = _ref3.paddingHorizontal,\n    textAlign = _ref3.textAlign,\n    viewStyle = _objectWithoutProperties(_ref3, _excluded2);\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var _calculateFlatInputHo = calculateFlatInputHorizontalPadding({\n      adornmentConfig: adornmentConfig,\n      isV3: isV3\n    }),\n    paddingLeft = _calculateFlatInputHo.paddingLeft,\n    paddingRight = _calculateFlatInputHo.paddingRight;\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: InputMode.Flat,\n    isV3: isV3\n  });\n  var _getFlatInputColors = getFlatInputColors({\n      underlineColor: underlineColor,\n      activeUnderlineColor: activeUnderlineColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getFlatInputColors.inputTextColor,\n    activeColor = _getFlatInputColors.activeColor,\n    underlineColorCustom = _getFlatInputColors.underlineColorCustom,\n    placeholderColor = _getFlatInputColors.placeholderColor,\n    errorColor = _getFlatInputColors.errorColor,\n    backgroundColor = _getFlatInputColors.backgroundColor;\n  var containerStyle = {\n    backgroundColor: backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.getConstants().isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingOffset: isAndroid ? {\n      paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n      paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight\n    } : {\n      paddingRight: paddingRight,\n      paddingLeft: paddingLeft\n    },\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle\n  };\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(Underline, {\n    style: underlineStyle,\n    hasActiveOutline: hasActiveOutline,\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor\n  }), React.createElement(View, {\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && !!label && React.createElement(View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps\n  }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: testID\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left'\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle]\n  }))), React.createElement(TextInputAdornment, adornmentProps));\n};\nexport default TextInputFlat;\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n    error = _ref2.error,\n    colors = _ref2.colors,\n    activeColor = _ref2.activeColor,\n    underlineColorCustom = _ref2.underlineColorCustom,\n    hasActiveOutline = _ref2.hasActiveOutline,\n    style = _ref2.style;\n  var _useInternalTheme = useInternalTheme(),\n    isV3 = _useInternalTheme.isV3;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors === null || colors === void 0 ? void 0 : colors.error;\n  var activeScale = isV3 ? 2 : 1;\n  return React.createElement(Animated.View, {\n    testID: \"text-input-underline\",\n    style: [styles.underline, isV3 && styles.md3Underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: (isV3 ? hasActiveOutline : parentState.focused) ? activeScale : 0.5\n      }]\n    }, style]\n  });\n};\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  md3Underline: {\n    height: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"sources":["TextInputFlat.tsx"],"names":["React","useInternalTheme","AdornmentSide","AdornmentType","InputMode","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","ADORNMENT_SIZE","LABEL_PADDING_TOP_DENSE","LABEL_WIGGLE_X_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_Y_OFFSET","MIN_DENSE_HEIGHT","MIN_DENSE_HEIGHT_WL","adjustPaddingFlat","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","calculateInputHeight","calculateLabelTopPosition","calculatePadding","getConstants","getFlatInputColors","interpolatePlaceholder","InputLabel","TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","contentStyle","rest","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","fontSize","fontSizeStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","paddingOffset","maxFontSizeMultiplier","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","activeScale","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  interpolatePlaceholder,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID,\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n  style,\n}: UnderlineProps) => {\n  const { isV3 } = useInternalTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      testID=\"text-input-underline\"\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}